Se ingresa el número de cuenta, el saldo de caja de ahorro y el saldo de cuenta corriente de clientes de un banco. 
Cargar una lista con estos datos. La carga de datos finaliza cuando el número de cuenta del cliente es cero. 

a) Generar una nueva lista con el número de cuenta de cada cliente y su saldo unificado.

b) Eliminar las cuentas de aquellos clientes con saldo negativo en la caja de ahorro o en la cuenta corriente.

c) Ingresar los datos de un nuevo cliente e insertarlo al final de la lista.





#include <stdio.h>
#include <stdlib.h>

typedef struct lista{
	int num_cuenta;
	int saldo_ca;
	int saldo_cc;
	struct lista *sig;
 }nodo;

typedef struct lista_unif{
	int num_cuenta;
	int saldo_unif;
	struct lista_unif *sig;
 }nodo_unif;

void crear (nodo *p);
void mostrar(nodo *p);
void crear_lista_unif(nodo_unif *r, nodo *p);
void mostrar_unif(nodo_unif *r);
nodo* eliminar_neg(nodo* p);
void eliminar_neg2(nodo* p);
void insertar(nodo*);
nodo* insertar2(nodo* p);



int main()
{
    nodo *p=NULL;
    nodo_unif *r=NULL;
    int num_cuenta,saldo_ca,saldo_cc;

    p=(nodo*)malloc(sizeof(nodo));
    crear(p);
    mostrar(p);
    r=(nodo*)malloc(sizeof(nodo));
    crear_lista_unif(r,p);
    mostrar_unif(r);
    p=eliminar_neg(p);
    eliminar_neg2(p);
    printf("\nLista con negativos eliminados\n");
    mostrar(p);
    insertar(p);
    printf("\nLista con insercion \n");
    mostrar(p);
    p=insertar2(p);
    mostrar(p);

};

void crear (nodo *reg)
{
    printf("Ingrese numero de cuenta: ");
    scanf("%d",&reg->num_cuenta);
    printf("Ingrese saldo de caja de ahorro: ");
    scanf("%d",&reg->saldo_ca);
    printf("Ingrese saldo de cuenta corriente: ");
    scanf("%d",&reg->saldo_cc);
    if(reg->num_cuenta==0)
        reg->sig=NULL;
    else
        {
        reg->sig=(nodo*)malloc(sizeof(nodo));
        crear(reg->sig);
        }
};

void mostrar (nodo *reg)
{
    if (reg->sig !=NULL)
	{
        printf ("Numero de Cuenta:%d\n",reg->num_cuenta);
        printf ("Saldo de Caja de Ahorro:%d\n",reg->saldo_ca);
        printf ("Saldo de Cuenta Corriente:%d\n",reg->saldo_cc);
        printf("-----------------------------\n");
        mostrar (reg->sig);
	}
	return;
};


void crear_lista_unif(nodo_unif *reg_unif,nodo *reg)
{
    if(reg->num_cuenta==0)
        reg_unif->sig=NULL;
    else
        {
        reg_unif->num_cuenta = reg->num_cuenta;
        reg_unif->saldo_unif=reg->saldo_ca+reg->saldo_cc;
        reg_unif->sig=(nodo*)malloc(sizeof(nodo));
        crear_lista_unif(reg_unif->sig,reg->sig);
        }
};

void mostrar_unif(nodo_unif *reg)
{
    if (reg->sig !=NULL)
	{
        printf ("Numero de Cuenta:%d\n",reg->num_cuenta);
        printf ("Saldo Unificado:%d\n",reg->saldo_unif);
        printf("-----------------------------\n");
        mostrar_unif(reg->sig);
	}
	return;
};


nodo* eliminar_neg(nodo* p)
{nodo *aux;
    while(p->saldo_ca<0 || p->saldo_cc<0)
    {
        aux=p->sig;
        free(p);
        p=aux;

    }
    return p;
};

void eliminar_neg2(nodo* p)
{nodo *aux;
    while(p->sig!=NULL && p->sig->sig!=NULL)
    {
        if(p->sig->saldo_ca<0 || p->sig->saldo_cc<0)
        {
            aux=p->sig->sig;
            free(p->sig);
            p->sig=aux;
        }
        else
        {
            p=p->sig;
        }
    }

};

void insertar(nodo *r)
{
    nodo *aux;
    aux=(nodo*)malloc(sizeof(nodo));
    printf("ingrese nro de cuenta");
    scanf("%d",&aux->num_cuenta);
    printf("ingrese saldo caja de ahorro");
    scanf("%d",&aux->saldo_ca);
    printf("ingrese saldo en cuenta corriente");
    scanf("%d",&aux->saldo_cc);
    while(r->sig->sig!=NULL)
        r=r->sig;
    printf("%d",r->num_cuenta);

    aux->sig=r->sig;
    r->sig=aux;
}


nodo *insertar2(nodo *r)
{
    nodo *aux;
    aux=(nodo*)malloc(sizeof(nodo));
    printf("ingrese nro de cuenta");
    scanf("%d",&aux->num_cuenta);
    printf("ingrese saldo caja de ahorro");
    scanf("%d",&aux->saldo_ca);
    printf("ingrese saldo en cuenta corriente");
    scanf("%d",&aux->saldo_cc);
    aux->sig=r;
    r=aux;
    return r;
}